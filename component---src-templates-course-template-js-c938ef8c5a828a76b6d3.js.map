{"version":3,"sources":["webpack:///./src/components/shared/Page/Page.js","webpack:///./node_modules/@material-ui/core/esm/ListItemText/ListItemText.js","webpack:///./src/components/Course/Course.js","webpack:///./src/templates/course-template.js"],"names":["Page","children","className","defaultProps","props","ref","classes","_props$disableTypogra","disableTypography","_props$inset","inset","primaryProp","primary","primaryTypographyProps","secondaryProp","secondary","secondaryTypographyProps","other","dense","ListContext","type","Typography","variant","component","display","color","root","multiline","withStyles","flex","minWidth","marginTop","marginBottom","paddingLeft","name","useStyles","makeStyles","theme","sectionTitle","padding","spacing","sectionWrapper","courseCardItem","margin","relatedThemesTitle","Tag","textAlign","Button","Course","course","useTheme","frontmatter","tags","title","description","lessons","fields","tagSlugs","slug","Box","m","maxWidth","breakpoints","values","lg","Link","to","role","List","disablePadding","aria-label","map","value","link","ListItem","disableGutters","key","length","i","CourseTemplate","data","markdownRemark","courseSlug","courseTitle","courseDescription","Layout"],"mappings":"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","file":"component---src-templates-course-template-js-c938ef8c5a828a76b6d3.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Page.scss';\n\nconst Page = ({children}) => (\n  <div className=\"Page\">\n    <div className=\"Page-inner\">\n      <div className=\"Page-body\">{children}</div>\n    </div>\n  </div>\n);\n\nPage.propTypes = {\n  children: PropTypes.node,\n};\n\nPage.defaultProps = {\n  children: null,\n};\n\nexport default Page;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    flex: '1 1 auto',\n    minWidth: 0,\n    marginTop: 4,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the `Typography` components if primary and secondary are set. */\n  multiline: {\n    marginTop: 6,\n    marginBottom: 6\n  },\n\n  /* Styles applied to the `Typography` components if dense. */\n  dense: {},\n\n  /* Styles applied to the root element if `inset={true}`. */\n  inset: {\n    paddingLeft: 56\n  },\n\n  /* Styles applied to the primary `Typography` component. */\n  primary: {},\n\n  /* Styles applied to the secondary `Typography` component. */\n  secondary: {}\n};\nvar ListItemText = /*#__PURE__*/React.forwardRef(function ListItemText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      primaryProp = props.primary,\n      primaryTypographyProps = props.primaryTypographyProps,\n      secondaryProp = props.secondary,\n      secondaryTypographyProps = props.secondaryTypographyProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"]);\n\n  var _React$useContext = React.useContext(ListContext),\n      dense = _React$useContext.dense;\n\n  var primary = primaryProp != null ? primaryProp : children;\n\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: \"span\",\n      display: \"block\"\n    }, primaryTypographyProps), primary);\n  }\n\n  var secondary = secondaryProp;\n\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"textSecondary\",\n      display: \"block\"\n    }, secondaryTypographyProps), secondary);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dense && classes.dense, inset && classes.inset, primary && secondary && classes.multiline),\n    ref: ref\n  }, other), primary, secondary);\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemText'\n})(ListItemText);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Typography,\n  Box,\n  Button,\n  List,\n  ListItem,\n  ListItemText,\n} from '@material-ui/core';\nimport {makeStyles, useTheme, withStyles} from '@material-ui/core/styles';\nimport {Link} from 'gatsby';\n\nconst useStyles = makeStyles((theme) => ({\n  sectionTitle: {\n    padding: theme.spacing(2, 0, 6),\n  },\n  sectionWrapper: {\n    display: 'block',\n    padding: theme.spacing(4, 0, 4),\n  },\n  courseCardItem: {\n    margin: theme.spacing(3, 0, 3),\n  },\n  relatedThemesTitle: {\n    marginBottom: theme.spacing(4),\n  },\n}));\n\nconst Tag = withStyles((theme) => ({\n  root: {\n    display: 'inline-block',\n    textAlign: 'center',\n    margin: theme.spacing(0, 2, 2, 0),\n    padding: theme.spacing(2),\n  },\n}))(Button);\n\nconst Course = ({course}) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const {tags, title, description, lessons} = course.frontmatter;\n  const {tagSlugs, slug} = course.fields;\n  return (\n    <Box m=\"auto\" maxWidth={theme.breakpoints.values.lg}>\n      <Button component={Link} to=\"/courses\" role=\"link\">\n        Back to Courses\n      </Button>\n      <Box className={classes.sectionWrapper}>\n        <Typography variant=\"h2\" className={classes.sectionTitle}>\n          {title}\n        </Typography>\n        <Typography variant=\"body1\">{description}</Typography>\n      </Box>\n      <List component=\"ol\" disablePadding aria-label=\"Available courses\">\n        {lessons.map(({link, title, description}, value) => (\n          <ListItem\n            disableGutters\n            key={title}\n            className={classes.sectionWrapper}\n          >\n            <ListItemText\n              primary={\n                <Typography variant=\"h3\" className={classes.courseCardItem}>\n                  {value + 1}\n                  {'. '}\n                  {title}\n                </Typography>\n              }\n              secondary={<Typography variant=\"body1\">{description}</Typography>}\n            />\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              component={Link}\n              to={`${slug}${link}`}\n              className={classes.courseCardItem}\n            >\n              Learn {title}\n            </Button>\n          </ListItem>\n        ))}\n      </List>\n      {tags.length > 2 && (\n        <Box className={classes.sectionWrapper} textAlign=\"center\">\n          <Typography variant=\"h4\" className={classes.relatedThemesTitle}>\n            Related Themes\n          </Typography>\n          {tagSlugs.map((slug, i) => (\n            <Tag\n              variant=\"outlined\"\n              color=\"secondary\"\n              key={`${tags[i]}slug`}\n              component={Link}\n              to={slug}\n            >\n              {tags[i]}\n            </Tag>\n          ))}\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nCourse.propTypes = {\n  course: PropTypes.shape({\n    frontmatter: PropTypes.shape({\n      tags: PropTypes.array,\n      title: PropTypes.string,\n      description: PropTypes.node,\n      lessons: PropTypes.arrayOf(PropTypes.object),\n    }).isRequired,\n    fields: PropTypes.shape({\n      tagSlugs: PropTypes.array,\n      slug: PropTypes.string,\n    }),\n  }),\n};\n\nexport default Course;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {graphql} from 'gatsby';\nimport Layout from '../components/shared/Layout';\nimport Course from '../components/Course';\nimport Page from '../components/shared/Page';\n\nconst CourseTemplate = ({data}) => {\n  const {\n    fields: {slug: courseSlug},\n    frontmatter: {title: courseTitle, description: courseDescription},\n  } = data.markdownRemark;\n\n  return (\n    <Layout\n      title={courseTitle}\n      description={courseDescription}\n      slug={courseSlug}\n    >\n      <Page>\n        <Course course={data.markdownRemark} />\n      </Page>\n    </Layout>\n  );\n};\n\nCourseTemplate.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.shape({\n      frontmatter: PropTypes.shape({\n        title: PropTypes.string,\n        description: PropTypes.string,\n      }),\n    }),\n  }).isRequired,\n};\n\nexport const query = graphql`\n  query CourseBySlug($slug: String!) {\n    markdownRemark(fields: {slug: {eq: $slug}}) {\n      id\n      html\n      fields {\n        slug\n        tagSlugs\n      }\n      frontmatter {\n        description\n        tags\n        title\n        lessons {\n          link\n          description\n          title\n        }\n      }\n    }\n  }\n`;\n\nexport default CourseTemplate;\n"],"sourceRoot":""}